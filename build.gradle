apply plugin: 'java-library'
apply plugin: 'maven-publish'

group = 'com.ThePinkAlliance.core'
version = '2.1.15'

sourceCompatibility = JavaVersion.VERSION_11 // java 11
targetCompatibility = JavaVersion.VERSION_11

def CORE_MAIN_CLASS = "com.ThePinkAlliance.core"

repositories {
  mavenCentral()
  maven { 
    url = uri('https://frcmaven.wpi.edu/artifactory/release/')     
  }
  maven { url = uri('https://maven.revrobotics.com/') }
  maven { url = uri('https://devsite.ctr-electronics.com/maven/release/') }
  maven {
    url = uri("https://plugins.gradle.org/m2/")
  }
}

dependencies {
  implementation 'com.google.guava:guava:29.0-jre'

  implementation 'edu.wpi.first.wpilibj:wpilibj-java:2022.4.1'
  implementation 'edu.wpi.first.shuffleboard:shuffleboard:2022.4.1'
  implementation 'edu.wpi.first.shuffleboard:api:2022.4.1'
  implementation 'edu.wpi.first.wpilibNewCommands:wpilibNewCommands-java:2022.4.1'
  implementation 'edu.wpi.first.wpiutil:wpiutil-java:2022.4.1'
  implementation 'edu.wpi.first.cscore:cscore-java:2022.4.1'
  implementation 'edu.wpi.first.ntcore:ntcore-java:2022.4.1'
  implementation 'edu.wpi.first.wpimath:wpimath-java:2022.4.1'

  implementation 'com.ctre.phoenix:api-java:5.21.2'

  implementation 'com.revrobotics.frc:REVLib-java:2022.1.1'
}


jar {
  def env = System.getenv("JITPACK")

  if (env == false || env == null) {
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(CORE_MAIN_CLASS)
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
  }
}

publishing {
    publications {
        maven(MavenPublication) {
          from components.java
        }
    }
}